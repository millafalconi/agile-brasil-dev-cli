#!/usr/bin/env bash
# vim: ft=sh

SOLUTION_DESC="CLI solution script for 'dev'"
SUBCOMMAND_DESC="Shortcuts to handle local dev env"
SUBCOMMAND_HELP=$(cat <<EOH

init                  Init, configure the local dev environment;
                      and start the app.
                      
start                 Start transervicos in local dev environment.

stop [SERVER]         Stop transervicos in local dev environment. 

clean_data            Clean all data in local dev environment.

db_migrate            Run DB migration.

goto                  Open transervicos app in localhost. 
                      Will trigger 'open URL', in OSX this
                      will fire up your browser.

dance                 Simulates the check-in dance
                      by pulling the code, running tests
                      and pushing the code

EOH
)

function start() {
  docker-compose start
}

function init() {
  docker-compose up --build -d
  db_migrate
}

function stop() {
  docker-compose stop ${1}
}

function clean_db_data() {
  stop db
  docker volume rm transervicos_db_data
}

function goto() {
  open http://localhost:3000
}

function db_migrate() {
  docker-compose run web bash -c "rake db:create && rake db:migrate"
}

function checkin_dance() {
  in_cyan "running checkin dance"
  in_cyan "STEP 1: pull code from remote\n"
  local status=$(git status -s)
  if [[ ${status} != "" ]]; then
    warn "you have local changes not committed"
    warn "please commit before proceeding"
    echo
    in_cyan "aborting step 1"
    return
  fi
  in_cyan "RUNNING: git pull -r"
  echo
  git pull -r
  echo
  in_cyan "STEP 2: run all tests"
  in_cyan "RUNNING: tests"
  docker-compose run --rm web bash -c "rubocop && rspec spec"

  [[ $? -eq -1 ]] && error "there are tests failing. you cannot proceed. go fix the tests!"
  echo
  in_cyan "STEP 3: Check the CI server status"
  in_cyan "Is the CI status green? (Y/N)"
  read is_green

  case $is_green in
    y|Y)
      log "CI server status is green"
      in_cyan "proceeding to STEP 4: integrate the code"
      ;;
    n|N)
      log "CI server status is NOT green"
      warn "CI server status is NOT green"
      warn "you should NOT integrate your code"
      warn "go figure out why the CI is failing and fix it before proceeding"
      in_cyan "aborting checkin dance"
      return
      ;;
    *)
      log "args: '${*}'"
      error "'${is_green}' not a valid option"
      exit;;
  esac
  echo
  in_cyan "STEP 4: Integrate code"
  in_cyan "RUNNING: git push"
  echo
  git push
  if [[ $? -eq -1 ]]; then
    warn "someone else integrated their code before your."
    error "please start over."
  fi
  in_green "all set! checkin dance succeeded!"
}

is_help_mode "${@}" && return

case ${1} in
  start)
    start
    ;;
  init)
    init
    ;;
  stop)
    stop
    ;;
  clean_data)
    clean_db_data
    ;;
  db_migrate)
    db_migrate
    ;;
  goto)
    goto
    ;;
  dance)
    checkin_dance
    ;;
esac